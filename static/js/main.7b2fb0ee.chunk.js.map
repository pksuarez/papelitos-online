{"version":3,"sources":["components/FormularioInicial.js","components/CargarExcel.js","components/InputJugador.js","components/FormularioJugadores.js","components/Jugador.js","components/Papelito.js","components/PantallaJuego.js","components/App.js","index.js"],"names":["FormularioInicial","React","Component","state","cantJudores","selectedFile","nombres","onInputChange","e","a","target","name","setState","value","console","log","files","cargarExcel","fileReader","FileReader","onload","event","data","result","workbook","XLSX","read","type","SheetNames","forEach","sheet","rowObject","utils","sheet_to_row_object_array","Sheets","readAsBinaryString","onCantidadSubmit","preventDefault","props","onSubmit","onExcelLoad","className","this","accept","onChange","style","width","min","max","InputJugador","nombre","jugador","numero","onJugadorSubmit","FormularioJugadores","generarInputsJugador","elementos","i","cantidad","componenete","key","push","onFormSubmit","arregloJugadores","Object","entries","map","puntos","onJugadoresSubmit","class","Jugador","onButtonClick","onPuntosUpdate","onClick","Papelito","onNumberClick","estiloNombre","display","actual","rondaActual","estiloPepelito","background","cursor","prevProps","ronda","values","nuevoActual","PantallaJuego","listasCreadas","subs","actualizado","jugadores","length","crearJugadores","oJugador","crearSubListas","separadas","revueltas","shuffle","salto","slice","crearPapelitos","arregloPapelitos","sublistas","papelito","nuevo","j","Math","floor","random","onSiguienteClick","App","cantidadJugadores","enArreglo","Nombre","renderComponents","__rowNum__","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b2fb0ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport CargarExcel from './CargarExcel';\r\nimport XLSX from 'xlsx';\r\n\r\n\r\nclass FormularioInicial extends React.Component{\r\n    \r\n    state = {cantJudores: 2, selectedFile: null, nombres:[]};\r\n\r\n    onInputChange = async (e) => {\r\n        if (e.target.name ==\"jugadores\"){\r\n            this.setState({ cantJudores: e.target.value});\r\n        }\r\n\r\n        if (e.target.name ==\"cargarExcel\"){\r\n            console.log(\"excel load\");\r\n            await this.setState({ selectedFile: e.target.files[0]});\r\n            this.cargarExcel();\r\n        }\r\n    }\r\n    cargarExcel = () =>{\r\n        if (this.state.selectedFile) {\r\n            var fileReader = new FileReader();\r\n            fileReader.onload = (event) => {\r\n              var data = event.target.result;\r\n              var workbook = XLSX.read(data, {\r\n                type: \"binary\"\r\n              });\r\n                workbook.SheetNames.forEach( sheet => {\r\n                let rowObject = XLSX.utils.sheet_to_row_object_array(\r\n                  workbook.Sheets[sheet]\r\n                );\r\n                //this.setState({nombres:rowObject.map(nombre => {\r\n                  //  return nombre.Nombre})});\r\n                 this.setState({nombres:rowObject})\r\n                });\r\n            };\r\n            fileReader.readAsBinaryString(this.state.selectedFile);\r\n          }\r\n    }\r\n\r\n    onCantidadSubmit = (e) => {\r\n        e.preventDefault(); \r\n        this.props.onSubmit(this.state.cantJudores);\r\n        this.props.onExcelLoad(this.state.nombres);\r\n        console.log(this.state.nombres, \"nombres en form\")\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form className=\"ui form\" onSubmit={this.onCantidadSubmit}>\r\n                    <div className=\"field\">\r\n                        <label>Selecione el archivo de Excel</label>\r\n                        <input className=\"ui\" type=\"file\" name=\"cargarExcel\" accept=\".xls,.xlsx\" onChange={this.onInputChange} style={{width:'40%'}}/>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label>Cantidad de jugadores</label>\r\n                        <input name=\"jugadores\" value={this.state.cantJudores} type=\"number\" min='2' max='6' onChange={this.onInputChange} style={{width:'20%'}}/>\r\n                    </div>\r\n                    <button className=\"ui button\" type=\"submit\">Confirmar</button>\r\n                </form>\r\n            </div>);\r\n    }\r\n}\r\nexport default FormularioInicial;","import React from 'react';\r\nimport XLSX from 'xlsx';\r\n\r\nclass CargarExcel extends React.Component{\r\n    state = {selectedFile: null, nombres: [] }\r\n\r\n    onInputChange = async e =>{\r\n        await this.setState({ selectedFile: e.target.files[0]});\r\n        await this.cargarExcel();\r\n    }\r\n\r\n    cargarExcel = () =>{\r\n        if (this.state.selectedFile) {\r\n            var fileReader = new FileReader();\r\n            fileReader.onload = (event) => {\r\n              var data = event.target.result;\r\n              var workbook = XLSX.read(data, {\r\n                type: \"binary\"\r\n              });\r\n                workbook.SheetNames.forEach( sheet => {\r\n                let rowObject = XLSX.utils.sheet_to_row_object_array(\r\n                  workbook.Sheets[sheet]\r\n                );\r\n                //this.setState({nombres:rowObject.map(nombre => {\r\n                  //  return nombre.Nombre})});\r\n                 this.setState({nombres:rowObject})\r\n                });\r\n            };\r\n            fileReader.readAsBinaryString(this.state.selectedFile);\r\n          }\r\n    }\r\n\r\n    onUploadExcel = () =>{\r\n        console.log(this.state.nombres, \"nombres en cargar\");\r\n        this.props.onExcelLoad(this.state.nombres);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"field\">\r\n                <label>Selecione el archivo de Excel</label>\r\n                <input className=\"ui\" type=\"file\" name=\"cargarExcel\" accept=\".xls,.xlsx\" onChange={this.onInputChange} style={{width:'40%'}}/>\r\n                <button className=\"ui button\" type=\"button\" onClick={this.onUploadExcel}>Cargar archivo</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default CargarExcel;","import React from 'react';\r\n\r\nclass InputJugador extends React.Component{\r\n    state = {nombre:''}\r\n\r\n    onInputChange = async (e) => {\r\n        await this.setState({nombre: e.target.value});\r\n        let jugador = `jugador ${this.props.numero}`\r\n        this.props.onJugadorSubmit(jugador,this.state.nombre);\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"field\">\r\n                <label>Jugador {this.props.numero}</label>\r\n                <input className=\"ui input\" value={this.state.nombre} type=\"text\" style={{width:'40%'}} onChange={this.onInputChange}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default InputJugador;","import React from 'react';\r\nimport InputJugador  from './InputJugador';\r\n\r\nclass FormularioJugadores extends React.Component{\r\n    \r\n    state= {};\r\n    \r\n    onJugadorSubmit = (jugador,nombre) =>{\r\n        this.setState({\r\n            [jugador]:nombre}\r\n        )\r\n    };    \r\n\r\n    generarInputsJugador = () => {\r\n        let elementos = [];\r\n        for (let i = 1; i<= this.props.cantidad; i++){\r\n            let componenete = <InputJugador key={i} numero={i} onJugadorSubmit={this.onJugadorSubmit}/>\r\n            elementos.push(componenete) ;\r\n        }\r\n        return elementos;\r\n    }\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        let arregloJugadores = Object.entries(this.state).map( function ([key, value]){return ({jugador:key,nombre:value, puntos:0})});\r\n        this.props.onJugadoresSubmit(arregloJugadores);\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"ui warning message\">\r\n                    <i class=\"close icon\"></i>\r\n                    <div class=\"header\">\r\n                        Tiren los dardos y llenen los nombres en orden.\r\n                    </div>\r\n                </div>\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    {this.generarInputsJugador()}\r\n                    <button className=\"ui button\" type=\"submit\">Confirmar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FormularioJugadores;","import React from 'react';\r\n\r\nclass Jugador extends React.Component{\r\n\r\n    state = {}\r\n\r\n\r\n    onButtonClick = (e) => {\r\n        this.props.onPuntosUpdate(this.props.jugador);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <label>{this.props.nombre}</label>\r\n                <p>Puntos: {this.props.puntos}</p>\r\n                <button className=\"ui button\" onClick={this.onButtonClick}>Agregar Punto</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Jugador;","import React from 'react';\r\n\r\nclass Papelito extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {actual: 0, rondaActual:1, nombre:true, estiloNombre:{display:\"none\",}, estiloPepelito:{background:\"white\",cursor:\"pointer\"}}\r\n\r\n    }\r\n\r\n    onNumberClick = () =>{\r\n        this.setState({estiloNombre:{display:\"block\"}})\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.ronda !== this.props.ronda)\r\n                if (Object.values(this.state.estiloNombre) == \"block\"){ //validacion para modificar unicamente los selecionados   \r\n                    let nuevoActual = this.state.actual + 1;\r\n                    this.setState({actual:nuevoActual,estiloNombre:{display:\"none\"}});\r\n                    if(nuevoActual >= this.props.max) //validar si ya salieron todos los nombres\r\n                        this.setState({estiloPepelito:{background:\"red\",cursor:\"not-allowed\"}    });\r\n                }   \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div style={this.state.estiloPepelito} className=\"ui segment\" onClick={this.onNumberClick}>\r\n                <p>{this.props.numero}</p>\r\n                <p style={this.state.estiloNombre}>{this.props.nombres[this.state.actual]}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Papelito;","import React from 'react';\r\nimport Jugador  from './Jugador';\r\nimport Papelito from './Papelito';\r\n\r\nclass PantallaJuego extends React.Component{\r\n\r\n    state={ronda:1, listasCreadas:false, subs:[]}\r\n\r\n    onPuntosUpdate = (jugador) => {\r\n       let actualizado = this.props.jugadores;\r\n\r\n       for (let i = 0; i<actualizado.length; i++){\r\n           if (actualizado[i].jugador == jugador){\r\n               actualizado[i].puntos = actualizado[i].puntos + 1;\r\n           }\r\n       }\r\n       this.props.onPuntosUpdate(actualizado);\r\n    }\r\n\r\n    crearJugadores = () => {\r\n        return(\r\n            this.props.jugadores.map((oJugador) => {\r\n                return (\r\n                    <Jugador key={oJugador.jugador} jugador={oJugador.jugador} nombre={oJugador.nombre} puntos={oJugador.puntos} onPuntosUpdate={this.onPuntosUpdate}/>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    crearSubListas = () => {\r\n        let separadas = [];\r\n        let revueltas = this.shuffle(this.props.nombres);\r\n        let salto = revueltas.length/20;\r\n        for (let i = 0; i<revueltas.length;i+=salto){\r\n            separadas.push(revueltas.slice(i,i+salto));\r\n        }\r\n        console.log(separadas, \"separadas\");\r\n        return separadas;\r\n    }\r\n\r\n    crearPapelitos = () =>{\r\n        let arregloPapelitos = [];\r\n        let sublistas = [];\r\n        if(!this.state.listasCreadas){\r\n             sublistas = this.crearSubListas();\r\n             this.setState({listasCreadas:true, subs:sublistas})\r\n             for (let i=1; i<=20; i++){\r\n                let papelito = <Papelito numero={i} max={sublistas[i-1].length} nombres={sublistas[i-1]} ronda={this.state.ronda}/>\r\n                arregloPapelitos.push(papelito);\r\n            }\r\n        }\r\n        else{\r\n            for (let i=1; i<=20; i++){\r\n                let papelito = <Papelito numero={i} max={this.state.subs[i-1].length} nombres={this.state.subs[i-1]} ronda={this.state.ronda}/>\r\n                arregloPapelitos.push(papelito);\r\n            }\r\n        }\r\n        \r\n        return arregloPapelitos;\r\n    }\r\n\r\n\r\n    shuffle = (a) => {\r\n        let nuevo = [...a];\r\n        for (let i = nuevo.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [nuevo[i], nuevo[j]] = [nuevo[j], nuevo[i]];\r\n        }\r\n        return nuevo;\r\n    }\r\n\r\n    onSiguienteClick = () => {\r\n        this.setState({ronda:this.state.ronda+1});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"ui horizontal segments\">\r\n                    {this.crearJugadores()}\r\n                </div>\r\n\r\n                <div className=\"ui horizontal segments\">\r\n                    {this.crearPapelitos()}\r\n                </div>\r\n\r\n                <div className=\"ui center aligned\">\r\n                    <button className=\"ui button\" onClick={this.onSiguienteClick}>Siguiente Ronda</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PantallaJuego;\r\n","import React from 'react';\r\nimport FormularioInicial from './FormularioInicial';\r\nimport FormularioJugadores from './FormularioJugadores';\r\nimport PantallaJuego from './PantallaJuego';\r\n\r\n\r\nclass App extends React.Component{\r\n    \r\n    state = {cantidadJugadores: '', nombres: [], jugadores:[]}\r\n\r\n    onCantidadSubmit = async (cantidad) => {\r\n        await this.setState({ cantidadJugadores: cantidad });\r\n    }\r\n\r\n    onExcelLoad = async (nombres) => {\r\n        let enArreglo = nombres.map((nombre) =>{\r\n            return nombre.Nombre;\r\n        })\r\n\r\n        await this.setState({nombres:enArreglo});\r\n        console.log(this.state.nombres, \"en app \");\r\n    }\r\n\r\n    onJugadoresSubmit = (jugadores) =>{\r\n        this.setState({jugadores});\r\n    }\r\n\r\n    onPuntosUpdate = (actualizado) => {\r\n        this.setState({jugadores:actualizado});\r\n    }\r\n\r\n    renderComponents = () => {\r\n        if (this.state.cantidadJugadores === '' || this.state.nombres.length === 0){\r\n            return (\r\n                <div>\r\n                    <FormularioInicial onExcelLoad={this.onExcelLoad} onSubmit={this.onCantidadSubmit}/>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            if (this.state.jugadores.length === 0){\r\n                return(\r\n                    <FormularioJugadores cantidad={this.state.cantidadJugadores} onJugadoresSubmit={this.onJugadoresSubmit}/>\r\n                    )\r\n            }\r\n            else{\r\n                let jugador = this.state.jugadores[0];\r\n                return(\r\n                    <PantallaJuego nombres={this.state.nombres} jugadores={this.state.jugadores} onPuntosUpdate={this.onPuntosUpdate}/>\r\n\r\n                )\r\n            }\r\n                    \r\n        }\r\n    }\r\n\r\n    crearPapelitos = () =>{\r\n        console.log(this.state.nombres);\r\n        return (\r\n            this.state.nombres.map((nombre)=>{\r\n                return(\r\n                <h3 key={nombre.__rowNum__}>{nombre.Nombre}</h3>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop: '10px', width: '100%'}}>\r\n                <div className=\"ui center aligned segment\">\r\n                    <h1>Papelitos</h1>\r\n                    {this.renderComponents()}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}